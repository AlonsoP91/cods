import time
import numpy as np
from multiprocessing import Process, Manager,Pool, cpu_count
from matplotlib import pyplot as plt
def serialprimo(num):
    div=2
    while( div< np.sqrt(num)) :
        if (num%div==0):
            print(div)
            return 0
        div+=1
    return 1

def paralelizarprimo(numI,numF,num,rlist :list()):
    div =numI
    while( div<numF) :
        if (num%div==0):
            rlist.append(0)
            return 0
        div+=1
    rlist.append(1)
    return 1

def paralelo(num):
    manager = Manager()
    resultados = manager.list()
    total=np.sqrt(num)
    rango1=total//2
    rango2=total
    if(rango1<2):
        rango1=2
    inicio=time.perf_counter()
    p1=Process(target=paralelizarprimo,args=(2,rango1,num,resultados,))
    p2=Process(target=paralelizarprimo,args=(rango1,rango2,num,resultados,))
    p1.start()
    p2.start()
    p1.join()
    p2.join()
    
    fin=time.perf_counter()
    print(fin-inicio)
    if(resultados[0]==0): return 0
    if(resultados[1]==0): return 0
    return 1
#2 345 678 911 111 111

def paraleloNucleo(j,num):
    manager = Manager()
    resu = manager.list()
    p=Pool(processes=j)
    numero=[num]*j
    rangoI=list()
    rangoF=list()
    
    total=(np.sqrt(num))//j
    print(total)
    ptr=0
    for ini in range(j):
        if ini==0:
            rangoI.append(2)
        else:    
            rangoI.append(ptr)
            
        rangoF.append(ptr+total)
        ptr=ptr+total
        
        
        
        
    print(rangoI)
    print(rangoF)
    resultado=[resu]*j
    inicio1=time.perf_counter()
    p.starmap(paralelizarprimo,zip(rangoI,rangoF,numero,resultado))
    p.close()
    p.join()
    fin1=time.perf_counter()
    print(fin1-inicio1)
    
    return 1

if __name__=="__main__":
    lista=list()
    lista=[937480797703]
    for i in lista:
        inicio=time.perf_counter()
        print(serialprimo(i))
        fin=time.perf_counter()
        print(f"el tiempo serial de ejecucion es de: {fin-inicio}")
        
    #paralelo
    for ini in lista: 
        inicio=time.perf_counter()
        print(paralelo(ini))
        fin=time.perf_counter()
        print(f"el tiempo paralelo de ejecucion es de: {fin-inicio}")
        
    #multinucleo
    x=list()
    y=list()
    nucleos=[4,8,16]
    for j in nucleos:
        inicio=time.perf_counter()
        paraleloNucleo(j,lista[0])
        fin=time.perf_counter()
        print(f"tiempo para {j} nucleos :{fin-inicio}")
        x.append(fin-inicio)
        y.append(j)
        
    plt.plot(x,y)
    plt.xlabel('nucleos')
    plt.ylabel('timempos(s)')
    plt.show()